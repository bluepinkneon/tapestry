name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci
  NODE_VERSION: '20'

jobs:
  lint:
    name: Lint Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Run Solhint
        run: |
          npm install -g solhint
          solhint --config .solhint.json 'src/**/*.sol'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run Forge fmt check
        run: |
          forge fmt --check
        id: fmt

  build:
    name: Build & Compile
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Forge version
        run: |
          forge --version

      - name: Run Forge build
        run: |
          forge build --sizes
        id: build

      - name: Check contract sizes
        run: |
          forge build --sizes | grep -E "^[│├└]" || true
          echo "Checking that contracts are within size limits..."
          
  test:
    name: Test Contracts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run Forge tests
        run: |
          forge test -vvv
        id: test

      - name: Run coverage
        run: |
          forge coverage --report summary || true
        id: coverage

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run Slither
        uses: crytic/slither-action@v0.4.0
        continue-on-error: true
        with:
          target: 'src/'
          sarif: results.sarif
          fail-on: none

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: ${{ github.workspace }}/results.sarif

  gas-report:
    name: Gas Report
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run gas snapshot
        run: |
          forge snapshot --diff
        continue-on-error: true

      - name: Comment gas diff on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const gasReport = fs.existsSync('.gas-snapshot') 
              ? fs.readFileSync('.gas-snapshot', 'utf8') 
              : 'No gas changes detected';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Gas Report\n\`\`\`\n${gasReport}\n\`\`\``
            });
        continue-on-error: true